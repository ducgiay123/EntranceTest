version: "3.8"
services:
  postgres:
    image: postgres:16-alpine
    container_name: app_postgres
    environment:
      POSTGRES_DB: TaskWeb
      POSTGRES_USER: trung
      POSTGRES_PASSWORD: trungdn123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trung -d TaskWeb"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./AuthenticationTestDotNet
      dockerfile: Dockerfile
    container_name: app_api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=TaskWeb;Username=trung;Password=trungdn123
      - CORS__AllowedOrigins=http://localhost:3000,*
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app_network
    volumes:
      - ./AuthenticationTestDotNet:/app/source
    restart: unless-stopped

  frontend:
    build:
      context: ./authentication-test
      dockerfile: Dockerfile
    container_name: app_frontend
    environment:
      - REACT_APP_API_URL=http://api:5000
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "3000:3000"
    depends_on:
      api:
        condition: service_started
    networks:
      - app_network
    volumes:
      - ./authentication-test:/app
      - /app/node_modules
    stdin_open: true
    tty: true
    restart: unless-stopped

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
